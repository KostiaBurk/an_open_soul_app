import 'package:cloud_firestore/cloud_firestore.dart';
import '../models/message_model.dart';
import 'package:logger/logger.dart';

var logger = Logger();

/// üîÅ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: Firestore + –ª–æ–∫–∞–ª—å–Ω–æ
Future<void> editMessage(int index, List<Message> messages, String newText) async {
  if (index < 0 || index >= messages.length) return;
  final message = messages[index];

  if (message.id == null || message.id!.isEmpty) {
    logger.e("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç message.id");
    return;
  }

  try {
    await FirebaseFirestore.instance
        .collection('chats')
        .doc(message.chatId)
        .collection('messages')
        .doc(message.id)
        .update({
      'text': newText,
      'edited': true,
      'timestamp': Timestamp.now(),
    });

    messages[index] = message.copyWith(text: newText, edited: true);
    logger.i("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –≤ Firestore.");
  } catch (e) {
    logger.e("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: $e");
  }
}

/// üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ: Firestore + –ª–æ–∫–∞–ª—å–Ω–æ
Future<void> deleteMessage(int index, List<Message> messages) async {
  if (index < 0 || index >= messages.length) return;
  final message = messages[index];

  if (message.id == null || message.id!.isEmpty) {
    logger.e("‚ùå –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç message.id");
    return;
  }

  try {
    await FirebaseFirestore.instance
        .collection('chats')
        .doc(message.chatId)
        .collection('messages')
        .doc(message.id)
        .delete();

    messages.removeAt(index);
    logger.i("üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ Firestore.");
  } catch (e) {
    logger.e("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: $e");
  }
}

/// ‚ù§Ô∏è –†–µ–∞–∫—Ü–∏—è ‚Äî —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ
void addReaction(int index, List<Message> messages, String reaction) {
  if (index >= 0 && index < messages.length) {
    messages[index] = messages[index].copyWith(reaction: reaction);
  }
}
